import java.util.*;

public class Main {
    public static void main(String[] args) {
      System.out.println("Hello, World!");
      Book b=new Book();
      Number1 n=new Number1();
      b.updateDB();
      n.print();
  }
}
class Book{
  void updateDB()
  {
    for(int i=1;i<=5;i++)
    {
      System.out.println("updating databases");
      // try{Thread.sleep(8000);}catch(Exception e){}
    }
  }
}
class Number1{
  void print()
  {
     for(int i=1;i<=5;i++)
    {
      System.out.println(i);
    }
  }
}


//implementing two thread

import java.util.*;

public class Main {
    public static void main(String[] args) {
      System.out.println("Hello, World!");
      Book b=new Book();
      Number1 n=new Number1();
// b.updateDB();
  b.start();
    n.start();
    System.out.println("Bye ....");
  }
}
class Book extends Thread{
  public void run()
  {
    for(int i=1;i<=5;i++)
    {
      System.out.println("updating databases");
      // try{Thread.sleep(8000);}catch(Exception e){}
    }
  }
}
class Number1 extends Thread{
  public void run()
  {
     for(int i=1;i<=5;i++)
    {
      System.out.println(i);
    }
  }
}

//implementing runnable interface

import java.util.*;

public class Main {
    public static void main(String[] args) {
      System.out.println("Hello, World!");
      Runnable b=new Book();
      Number1 n=new Number1();
// b.updateDB();
Thread t=new Thread(b);
  t.start();
    n.start();
    if(t.isAlive())
    {
      System.out.println("Still executing");
    }
    try{
       t.join();
    n.join();
    }catch(Exception e){}
   
     if(t.isAlive())
    {
      System.out.println("Still executing");
    }
    System.out.println("Bye ....");
  }
}
class Book implements Runnable{
  public void run()
  {
    for(int i=1;i<=5;i++)
    {
      System.out.println("updating databases");
      // try{Thread.sleep(8000);}catch(Exception e){}
    }
  }
}
class Number1 extends Thread{
  public void run()import java.util.*;

public class Main {
    public static void main(String[] args) {
      System.out.println("Hello, World!");
      Runnable b=()->{
        for(int i=1;i<=5;i++)
    {
      System.out.println(i);
    };
      };
      Number1 n=new Number1();
// b.updateDB();
Thread t=new Thread(b);
  t.start();
    n.start();
    if(t.isAlive())
    {
      System.out.println("Still executing");
    }
    try{
       t.join();
    n.join();
    }catch(Exception e){}
   
     if(t.isAlive())
    {
      System.out.println("Still executing");
    }
    System.out.println("Bye ....");
  }
}
class Book implements Runnable{
  public void run()
  {
    for(int i=1;i<=5;i++)
    {
      System.out.println("updating databases");
      // try{Thread.sleep(8000);}catch(Exception e){}
    }
  }
}

  {
     for(int i=1;i<=5;i++)
    {
      System.out.println(i);
    }
  }
}
//thread using lamda expersion

import java.util.*;

public class Main {
    public static void main(String[] args) {
      System.out.println("Hello, World!");
      Runnable b=()->{
        for(int i=1;i<=5;i++)
    {
      System.out.println(i);
    };
      };
      Number1 n=new Number1();
// b.updateDB();
Thread t=new Thread(b);
  t.start();
    n.start();
    if(t.isAlive())
    {
      System.out.println("Still executing");
    }
    try{
       t.join();
    n.join();
    }catch(Exception e){}
   
     if(t.isAlive())
    {
      System.out.println("Still executing");
    }
    System.out.println("Bye ....");
  }
}
class Book implements Runnable{
  public void run()
  {
    for(int i=1;i<=5;i++)
    {
      System.out.println("updating databases");
      // try{Thread.sleep(8000);}catch(Exception e){}
    }
  }
}
//set name and priority

import java.util.*;

public class Main {
    public static void main(String[] args) {
      System.out.println("Hello, World!");
      Runnable b=()->{
        for(int i=1;i<=5;i++)
    {
      System.out.println(i);
    };
      };
      Book n=new Book();
// b.updateDB();
Thread t=new Thread(n);
  t.start();
    if(t.isAlive())
    {
      System.out.println("Still executing");
    }
   
     if(t.isAlive())
    {
      System.out.println("Still executing");
    }
    t.setName("book Example");
    System.out.println(t.getName());
    t.setPriority(Thread.MAX_PRIORITY);
        System.out.println(t.getPriority());

    System.out.println("Bye ....");
  }
}
class Book implements Runnable{
  public void run()
  {
    for(int i=1;i<=5;i++)
    {
      System.out.println("updating databases");
      // try{Thread.sleep(8000);}catch(Exception e){}
    }
  }
}

//schronized

import java.util.*;

public class Main {
    public static void main(String[] args) {
      System.out.println("Hello, World!");
      Book b=new Book();
     Thread t=new Thread(){
       public void run(){
                b.printTable(5);

       }
     };
     
     t.start();
     Thread t2=new Thread(){
       public void run(){
                b.printTable(10);

       }
     };
     
     t2.start();
  }
}
class Book{
 synchronized void printTable(int n){
   for(int i=1;i<=5;i++)
   System.out.println(n*i);
 }
 
}


